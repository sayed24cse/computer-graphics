#include <GL/gl.h>          // OpenGL functions for rendering
#include <GL/glut.h>        // GLUT library for windowing and event handling

// Display callback function
void display(void)
{
    glClear(GL_COLOR_BUFFER_BIT); // Clear the screen with background color

    // Draw upper background (Sky - Light Cyan)
    glColor3f(0.2, 1.0, 1.0); // Set color to light cyan
    glBegin(GL_POLYGON); // Begin drawing polygon
        glVertex3f(-100, 0, 0.0);   // Bottom-left
        glVertex3f(100, 0, 0.0);    // Bottom-right
        glVertex3f(100, 100, 0.0);  // Top-right
        glVertex3f(-100, 100, 0.0); // Top-left
    glEnd(); // End polygon

    // Draw roof (Triangle - Light Blue)
    glColor3f(0.7, 1.0, 1.0); // Set color to light blue
    glBegin(GL_POLYGON); // Begin triangle
        glVertex3f(-50, 20, 0.0);  // Bottom-left of roof
        glVertex3f(50, 20, 0.0);   // Bottom-right of roof
        glVertex3f(0, 60, 0.0);    // Top of roof (peak)
    glEnd(); // End triangle

    // Draw lower background (Ground - Olive Green)
    glColor3f(0.4, 0.5, 0.2); // Set color to olive green
    glBegin(GL_POLYGON); // Begin ground
        glVertex3f(-100, -100, 0.0); // Bottom-left
        glVertex3f(100, -100, 0.0);  // Bottom-right
        glVertex3f(100, 0, 0.0);     // Top-right
        glVertex3f(-100, 0, 0.0);    // Top-left
    glEnd(); // End ground

    // Draw house body (Dark Green)
    glColor3f(0.1, 0.5, 0.3); // Set color to dark green
    glBegin(GL_POLYGON); // Begin house rectangle
        glVertex3f(-40, -60, 0.0); // Bottom-left
        glVertex3f(40, -60, 0.0);  // Bottom-right
        glVertex3f(40, 20, 0.0);   // Top-right
        glVertex3f(-40, 20, 0.0);  // Top-left
    glEnd(); // End house body

    // Draw house footer/base (White strip)
    glColor3f(1.0, 1.0, 1.0); // Set color to white
    glBegin(GL_POLYGON); // Begin base strip
        glVertex3f(-45, -60, 0.0); // Bottom-left
        glVertex3f(45, -60, 0.0);  // Bottom-right
        glVertex3f(45, -55, 0.0);  // Top-right
        glVertex3f(-45, -55, 0.0); // Top-left
    glEnd(); // End base strip

    // Draw door (Light Blue)
    glColor3f(0.7, 1.0, 1.0); // Set color to light blue
    glBegin(GL_POLYGON); // Begin door
        glVertex3f(-10, -55, 0.0); // Bottom-left
        glVertex3f(10, -55, 0.0);  // Bottom-right
        glVertex3f(10, -10, 0.0);  // Top-right
        glVertex3f(-10, -10, 0.0); // Top-left
    glEnd(); // End door

    // Draw right window (Light Blue)
    glBegin(GL_POLYGON); // Begin right window
        glVertex3f(20, -38, 0.0);  // Bottom-left
        glVertex3f(35, -38, 0.0);  // Bottom-right
        glVertex3f(35, -20, 0.0);  // Top-right
        glVertex3f(20, -20, 0.0);  // Top-left
    glEnd(); // End right window

    // Draw left window (Light Blue)
    glBegin(GL_POLYGON); // Begin left window
        glVertex3f(-20, -38, 0.0); // Bottom-right
        glVertex3f(-35, -38, 0.0); // Bottom-left
        glVertex3f(-35, -20, 0.0); // Top-left
        glVertex3f(-20, -20, 0.0); // Top-right
    glEnd(); // End left window

    glFlush(); // Flush drawing commands and render the frame
}

// Initialization function
void init(void)
{
    glClearColor(0.0, 0.0, 0.0, 0.0); // Set background color to black (R,G,B,A)

    glMatrixMode(GL_PROJECTION); // Set projection matrix
    glLoadIdentity(); // Load identity matrix (reset)
    glOrtho(-100, 100, -100, 100, -1.0, 1.0); // Set orthographic 2D projection
}

// Main function
int main(int argc, char** argv)
{
    glutInit(&argc, argv); // Initialize GLUT with command-line arguments
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB); // Set display mode: single buffer, RGB color
    glutInitWindowSize(500, 500); // Set window size (width x height)
    glutInitWindowPosition(100, 100); // Set initial window position on screen
    glutCreateWindow("House"); // Create window with title

    init(); // Call user-defined initialization function
    glutDisplayFunc(display); // Register display callback function
    glutMainLoop(); // Enter event-processing loop (infinite loop)

    return 0; // End of main
}
