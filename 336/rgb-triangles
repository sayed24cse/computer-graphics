#include <GL/gl.h>       // Header file for OpenGL functions
#include <GL/glut.h>     // Header file for GLUT library (windowing, input, etc.)

// Function to render the display
void display(void)
{
    glClear(GL_COLOR_BUFFER_BIT);         // Clear the screen with the background color

    //Triangle Right
    // for color coding 1 means white & 0 means black
    glBegin(GL_POLYGON);                 // Begin a polygon (triangle in this case)
    glTranslatef(+25.0, 0.0, 0.0);
        glVertex3f (-60, -20, 0.0);      // lower left point
        glColor3f (0.7, 0.1, 1);
        glVertex3f (-10, -20, 0.0);      // lower right point
        glColor3f (0.7, 0.1, 1);
        glVertex3f (-10, 20, 0.0);      // upper right point
        glColor3f (0.7, 0.5, 0.1);
        glVertex3f (-60, 20, 0.0);      // upper right point
        glColor3f (0.7, 0.5, 0.1);

    glEnd();

     //Triangle Left
     // for color coding 1 means white & 0 means black
    glTranslatef(-50.0, 0.0, 0.0);        // Changes triangle position
    glBegin(GL_POLYGON);                 // Begin a polygon (triangle in this case)

        glVertex3f (40, 30, 0.0);        // lower left point
        glColor3f (1, 0.1, 1);
        glVertex3f (-5, 30, 0.0);        // lower right point
        glColor3f (1.0, 0.1, 1);
        glVertex3f (-5, -10, 0.0);       // upper right point
        glColor3f (0.5, 0.5, 0.1);
        glVertex3f (40, -10, 0.0);       // upper right point
        glColor3f (0.7, 0.5, 0.1);

    glEnd();                            // End the triangle polygon

    glFlush();                           // Execute all drawing commands and show result
}

// Initialization function for setting background and projection
void init(void)
{
    glClearColor(0.0, 0.0, 0.0, 0.0);     // Set background color to black (R, G, B, A)
    glMatrixMode(GL_PROJECTION);         // Set current matrix mode to projection
    glLoadIdentity();                    // Reset the projection matrix
    glOrtho(-100, 100, -100, 100, -1.0, 1.0); // Define a 2D orthographic projection
}

// Main function â€“ entry point of the program
int main(int argc, char** argv)
{
    glutInit(&argc, argv);                              // Initialize GLUT with command-line args
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);        // Set display mode to single buffer & RGB color
    glutInitWindowSize(500, 500);                       // Set the window size (width x height)
    glutInitWindowPosition(100, 100);                   // Set initial position of window on screen
    glutCreateWindow("RGB Triangles");    // Create window with a title

    init();                        // Call initialization function
    glutDisplayFunc(display);     // Register display callback function
    glutMainLoop();               // Enter the GLUT event-processing loop

    return 0;                     // Exit the program
}
