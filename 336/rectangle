#include <GL/gl.h>       // Header file for OpenGL functions
#include <GL/glut.h>     // Header file for GLUT library (windowing, input, etc.)

// Function to render the display
void display(void)
{
    glClear(GL_COLOR_BUFFER_BIT);         // Clear the screen with the background color

    //Draw Rectangle
    glColor3f(0.1, 0.5, 0.3);            // Set color to dark green
    glBegin(GL_POLYGON);                // Begin a polygon (rectangle)
        glVertex3f(-30, -40, 0.0);       // Bottom-left corner of rectangle
        glVertex3f(30, -40, 0.0);        // Bottom-right corner of rectangle
        glVertex3f(30, 0, 0.0);          // Top-right corner of rectangle
        glVertex3f(-30, 0, 0.0);         // Top-left corner of rectangle
    glEnd();                             // End the rectangle polygon

    glFlush();                           // Execute all drawing commands and show result
}

// Initialization function for setting background and projection
void init(void)
{
    glClearColor(0.0, 0.0, 0.0, 0.0);     // Set background color to black (R, G, B, A)
    glMatrixMode(GL_PROJECTION);         // Set current matrix mode to projection
    glLoadIdentity();                    // Reset the projection matrix
    glOrtho(-100, 100, -100, 100, -1.0, 1.0); // Define a 2D orthographic projection
}

// Main function â€“ entry point of the program
int main(int argc, char** argv)
{
    glutInit(&argc, argv);                              // Initialize GLUT with command-line args
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);        // Set display mode to single buffer & RGB color
    glutInitWindowSize(500, 500);                       // Set the window size (width x height)
    glutInitWindowPosition(100, 100);                   // Set initial position of window on screen
    glutCreateWindow("Rectangle");    // Create window with a title

    init();                        // Call initialization function
    glutDisplayFunc(display);     // Register display callback function
    glutMainLoop();               // Enter the GLUT event-processing loop

    return 0;                     // Exit the program
}
