#include <GL/gl.h>        // Include OpenGL core header
#include <GL/glut.h>      // Include GLUT header for window management

void display(void)
{
    glClear(GL_COLOR_BUFFER_BIT);        // Clear the screen with the current clear color

    glBegin(GL_POLYGON);                 // Begin drawing the first polygon (quadrilateral)
        glColor3f(0.5, 0.2, 0.4);       // Set current color to purple shade
        glVertex3f(25, -25, 0.0);       // Specify first vertex at (25, -25)

        glColor3f(0.20, 0.5, 0.3);      // Set color to greenish shade
        glVertex3f(75, -25, 0.0);       // Specify second vertex at (75, -25)

        glColor3f(1, 1, 1);              // Set color to white
        glVertex3f(75, 25, 0.0);        // Specify third vertex at (75, 25)

        glColor3f(0.2, 0.1, 0.2);       // Set color to dark purple/brown
        glVertex3f(25, 25, 0.0);        // Specify fourth vertex at (25, 25)
    glEnd();                            // End drawing the first polygon

    glTranslatef(-30.0, 0.0, 0.0);     // Translate the current coordinate system by -30 along X axis

    glBegin(GL_POLYGON);                // Begin drawing the second polygon (triangle)
        glColor3f(0.1, 0.4, 0.8);      // Set color to blue shade
        glVertex3f(0, 40, 0.0);        // Specify first vertex at (0, 40)

        glColor3f(1.1, 1, 1);          // Set color slightly over white (1.1 is out of normal range)
        glVertex3f(30, -40, 0.0);      // Specify second vertex at (30, -40)

        glColor3f(1, 0.1, 0.1);        // Set color to bright red shade
        glVertex3f(-30, -40, 0.0);     // Specify third vertex at (-30, -40)
    glEnd();                           // End drawing the second polygon

    glFlush();                         // Flush the rendering pipeline to display the drawn shapes
}

void init(void)
{
    glClearColor(1.0, 1.0, 1.0, 0.0);      // Set the clear (background) color to white
    glMatrixMode(GL_PROJECTION);            // Switch to projection matrix mode
    glLoadIdentity();                       // Reset the projection matrix
    glOrtho(-100.0, 100.0, -100.0, 100.0, -1.0, 1.0);  // Define orthographic projection box
}

int main(int argc, char** argv)
{
    glutInit(&argc, argv);                      // Initialize GLUT with command line parameters
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB); // Set display mode to single buffer and RGB color
    glutInitWindowSize(500, 500);               // Set the initial window size to 500x500 pixels
    glutInitWindowPosition(100, 100);           // Set the initial window position on the screen
    glutCreateWindow("rgb-triangle-and-rectangle"); // Create the window with the title "rgb-triangle-and-rectangle"
    init();                                     // Call the initialization function
    glutDisplayFunc(display);                    // Register display callback function
    glutMainLoop();                             // Enter the GLUT event processing loop
    return 0;                                   // Return 0 to indicate successful execution
}
