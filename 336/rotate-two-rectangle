#include <GL/gl.h>       // Include the OpenGL header file
#include <GL/glut.h>     // Include the GLUT library for window creation and handling

void display(void) {
    glClear(GL_COLOR_BUFFER_BIT);   // Clear the screen with the set background color

    glBegin(GL_POLYGON);            // Start drawing the first polygon
        glColor3f(0.6, 0.2, 0.4);   // Set color to a purple-like shade
        glVertex3f(-40, -27, 0.0);  // First vertex at (-40, -27)

        glColor3f(1, 1, 1);         // Set color to white
        glVertex3f(-10, -27, 0.0);  // Second vertex at (-10, -27)

        glColor3f(0.20, 0.5, 0.3);  // Set color to greenish
        glVertex3f(-10, 40, 0.0);   // Third vertex at (-10, 40)

        glColor3f(0.20, 0.1, 0.2);  // Set color to dark purple/brown
        glVertex3f(-40, 40, 0.0);   // Fourth vertex at (-40, 40)
    glEnd();                        // Finish the first polygon

    glBegin(GL_POLYGON);            // Start drawing the second polygon
        glColor3f(0.6, 0.2, 0.4);   // Set color to a purple-like shade
        glVertex3f(40, -50, 0.0);   // First vertex at (40, -50)

        glColor3f(1, 1, 1);         // Set color to white
        glVertex3f(10, -50, 0.0);   // Second vertex at (10, -50)

        glColor3f(0.20, 0.5, 0.3);  // Set color to greenish
        glVertex3f(10, 7, 0.0);     // Third vertex at (10, 7)

        glColor3f(0.20, 0.1, 0.2);  // Set color to dark purple/brown
        glVertex3f(40, 7, 0.0);     // Fourth vertex at (40, 7)
    glEnd();                        // Finish the second polygon

    glFlush();                      // Render the shapes to the screen
}

void init(void) {
    glClearColor(0.0, 0.0, 0.0, 0.0);       // Set the background color to black
    glMatrixMode(GL_PROJECTION);            // Switch to projection matrix mode
    glLoadIdentity();                       // Reset the projection matrix
    glOrtho(-100, 100, -100, 100, -1.0, 1.0); // Define a 2D orthographic viewing area
}

int main(int argc, char** argv) {
    glutInit(&argc, argv);                           // Initialize the GLUT library
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);     // Use single buffering and RGB color
    glutInitWindowSize(500, 500);                    // Set the window size to 500x500 pixels
    glutInitWindowPosition(100, 100);                // Set the window position on screen
    glutCreateWindow("rotate-two-rectangle");        // Create a window titled "rotate-two-rectangle"
    init();                                          // Run the initialization function
    glutDisplayFunc(display);                        // Register the display callback function
    glutMainLoop();                                  // Enter the GLUT event processing loop
    return 0;                                        // End of the program
}
